{"version":3,"sources":["actions/index.js","reducers/reducer_options.js","reducers/index.js","components/option.js","components/editoption.js","components/options.js","components/game.js","index.js"],"names":["DELETE_OPTION","ADD_OPTION","EDIT_OPTION","UPDATE_OPTION","addOption","values","type","payload","rootReducer","combineReducers","options","state","arguments","length","undefined","action","Object","objectSpread","list","filter","option","id","concat","Date","title","map","editing","input","Option","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","bind","assertThisInitialized","handleEdit","react_default","a","createElement","className","key","onClick","deleteById","editById","Component","connect","dispatch","EditOption","handleChange","handleSubmit","event","setState","target","value","updateById","onChange","Options","addNewOption","Link","to","editoption","components_option","newOption","Game","alive","dead","store","createStore","reducers","ReactDOM","render","es","BrowserRouter","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.00c73027.chunk.js","sourcesContent":["export const DELETE_OPTION = 'delete_option';\nexport const ADD_OPTION = 'add_option';\nexport const EDIT_OPTION = 'edit_option';\nexport const UPDATE_OPTION = 'update_option';\nexport const START_GAME = 'start_game';\n\nexport function deleteOption(values) {\n    return {\n        type: DELETE_OPTION,\n        payload: values \n    };\n}\n\nexport function addOption(values) {\n    return {\n        type: ADD_OPTION,\n        payload: values      \n    };\n}\n\nexport function editOption(values) {\n    return {\n        type: EDIT_OPTION,\n        payload: values       \n    };\n}\n\nexport function updateOption(values) {\n    return {\n        type: UPDATE_OPTION,\n        payload: values       \n    };\n}\n\nexport function startGame(values) {\n    return {\n        type: START_GAME,\n        payload: values\n    };\n}","import _ from 'lodash';\nimport { DELETE_OPTION, ADD_OPTION, EDIT_OPTION, UPDATE_OPTION } from '../actions';\n\nexport default function(state = {}, action) {\n\n    switch(action.type) {\n        \n        case DELETE_OPTION:\n            return {\n                ...state,\n                list: state.list.filter((option)=>option.id !== action.payload)\n            };\n\n        case ADD_OPTION:\n            return {\n                ...state,\n                list: state.list.concat({id: new Date(), title:action.payload})\n            };\n            \n        case EDIT_OPTION:\n            return {\n                ...state,\n                list: state.list.map((option) => option.id === action.payload ? { ...option, editing: !option.editing } : option)\n            };\n        \n        case UPDATE_OPTION:\n            return {\n                ...state,\n                list: state.list.map((option) => {\n                    if (option.id === action.payload.id) {\n                        return {\n                            ...option,\n                            title: action.payload.input,\n                            editing: !option.editing\n                        }\n                    } else return option;\n                })\n            }\n            \n        default: return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport OptionsReducer from './reducer_options';\n\nconst rootReducer = combineReducers({\n    options: OptionsReducer\n});\n\nexport default rootReducer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteOption, editOption } from '../actions';\n\nclass Option extends Component {\n    constructor(props) {\n        super(props);\n          \n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n    }   \n    \n    render() {\n        return (\n        <div className=\"option\">\n            {this.props.title}\n            <i key={this.props.id} className=\"fa fa-pencil\" onClick={this.handleEdit}></i>\n            <i className=\"fa fa-close\" onClick={this.handleDelete}></i>\n        </div>\n        );\n    }\n\n    handleDelete() {\n        this.props.deleteById(this.props.id);\n    }\n\n    handleEdit() {\n        this.props.editById(this.props.id);\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return { list: state.options.list\n              };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteById: (id) => {\n            dispatch(deleteOption(id))\n        },\n        editById: (id) => {\n            dispatch(editOption(id))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Option);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateOption } from '../actions';\n\nclass EditOption extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: this.props.title,\n            id: this.props.id\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {  \n        this.setState({\n            input: event.target.value\n        });\n    }\n\n    handleSubmit() {\n        this.props.updateById(this.state);\n    }\n\n    render() {\n        return (\n            <div>\n                <input value={this.state.input} onChange={this.handleChange} type=\"text\" /><button onClick={this.handleSubmit}>save</button>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { list: state.options.list\n              };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateById: (id) => {\n            dispatch(updateOption(id))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOption);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addOption } from '../actions';\nimport Option from './option';\nimport EditOption from './editoption';\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(event) {  \n        this.setState({\n            input: event.target.value\n        });\n    }\n\n    handleSubmit() {\n        this.props.addNewOption(this.state.input);\n        this.setState({\n            input: ''\n        });\n    }\n\n    render() {\n        return (       \n            <div>\n                <div>\n                    <Link to=\"/\">Back to Game</Link>\n                </div>\n                List of Options:\n                <ul>\n            {this.props.list.map( (option) => {\n                return (        \n                   <li key={option.id}>\n                    {option.editing ? <EditOption title={option.title} id={option.id} /> :\n                            <Option id={option.id} title={option.title} />}      \n                   </li>\n                )\n              })\n            }\n                <li><input value={this.state.input} onChange={this.handleChange} type=\"text\" /><button onClick={this.handleSubmit}>add</button></li>\n                </ul>\n            </div>        \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { list: state.options.list\n              };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addNewOption: (newOption) => {\n            dispatch(addOption(newOption))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { startGame, addOption } from '../actions';\n\nclass Game extends Component {\n    render() {\n        return (\n            <div>\n                <Link to=\"/options\">Edit Options</Link>\n                <div>\n                Game should show up here\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { \n        list: state.options.list,\n        alive: state.options.alive,\n        dead: state.options.dead\n     };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        options: (option) => {\n            dispatch(addOption(option))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport reducers from './reducers';\nimport Options from './components/options';\nimport Game from './components/game';\n\nconst initialState = {\n    options: {\n        list: [\n        { id: 1, title:'Wein', editing: false},\n        { id: 2, title:'Bier', editing: false},\n        { id: 3, title:'Spielen', editing: false},\n        { id: 4, title:'Lesen', editing: false} ],\n        dead: [],\n        alive: []\n    }  \n}\n\nconst store = createStore(reducers, initialState);\n\nReactDOM.render(\n    <Provider store={store} >       \n        <BrowserRouter>\n            <div>\n                <Switch>\n                    <Route path=\"/options\" component={Options} />\n                    <Route path=\"/\" component={Game} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById(\"container\")\n)"],"sourceRoot":""}